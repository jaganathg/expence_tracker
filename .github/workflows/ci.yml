name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt,clippy
  
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  
      - name: Check formatting
        run: |
          cargo fmt
          cargo fmt -- --check
  
      - name: Run clippy
        run: cargo clippy -- -D warnings
  
      - name: Build
        run: cargo build --verbose
  
      - name: Run tests
        run: cargo test --verbose

  build-frontend:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    defaults:
      run:
        working-directory: ./frontend
  
    steps:
      - uses: actions/checkout@v4
  
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt,clippy
  
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  
      - name: Install Dioxus CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo install cargo-binstall
          cargo binstall dioxus-cli --no-confirm
        timeout-minutes: 15
  
      - name: Check formatting
        run: |
          cargo fmt
          cargo fmt -- --check
  
      - name: Run clippy
        run: cargo clippy -- -D warnings
  
      - name: Build frontend
        run: dx build --release
  
      - name: Run frontend tests
        run: cargo test

  docker:
    runs-on: ubuntu-latest
    needs: [test, build-frontend]
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
  
    steps:
      - uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/expence_tracker-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/expence_tracker-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max